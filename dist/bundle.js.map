{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://sudoku_validator/./src/sudokuValidator.js","webpack://sudoku_validator/webpack/bootstrap","webpack://sudoku_validator/./src/index.js"],"sourcesContent":["const isValidSudoku = (board) => {\n    const isValid = (nums) => {\n      const set = new Set();\n      for (let num of nums) {\n        if (num < 1 || num > 9 || set.has(num)) {\n          return false;\n        }\n        set.add(num);\n      }\n      return true;\n    };\n  \n    for (let i = 0; i < 9; i++) {\n      if (!isValid(board[i])) {\n        return false;\n      }\n    }\n  \n    for (let i = 0; i < 9; i++) {\n      const col = [];\n      for (let j = 0; j < 9; j++) {\n        col.push(board[j][i]);\n      }\n      if (!isValid(col)) {\n        return false;\n      }\n    }\n  \n    const gridStarts = [0, 3, 6];\n    for (let row of gridStarts) {\n      for (let col of gridStarts) {\n        const grid = [];\n        for (let i = 0; i < 3; i++) {\n          for (let j = 0; j < 3; j++) {\n            grid.push(board[row + i][col + j]);\n          }\n        }\n        if (!isValid(grid)) {\n          return false;\n        }\n      }\n    }\n  \n    return true;\n  };\n  \n  module.exports = { isValidSudoku };\n\n  // Run tests\n  // npm test\n\n\n  ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { isValidSudoku } = require('./sudokuValidator');\n\nconst board = [\n  [5, 3, 4, 6, 7, 8, 9, 1, 2],\n  [6, 7, 2, 1, 9, 5, 3, 4, 8],\n  [1, 9, 8, 3, 4, 2, 5, 6, 7],\n  [8, 5, 9, 7, 6, 1, 4, 2, 3],\n  [4, 2, 6, 8, 5, 3, 7, 9, 1],\n  [7, 1, 3, 9, 2, 4, 8, 5, 6],\n  [9, 6, 1, 5, 3, 7, 2, 8, 4],\n  [2, 8, 7, 4, 1, 9, 6, 3, 5],\n  [3, 4, 5, 2, 8, 6, 1, 7, 9]\n];\n\nconsole.log(isValidSudoku(board));\n\n\n// Function to create the Sudoku grid UI\nconst createSudokuGrid = () => {\n  const grid = document.getElementById('sudokuGrid');\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      const cell = document.createElement('div');\n      cell.className = 'sudoku-cell';\n      const input = document.createElement('input');\n      input.type = 'number';\n      input.min = 1;\n      input.max = 9;\n      cell.appendChild(input);\n      grid.appendChild(cell);\n    }\n  }\n};\n\n// Function to read values from the Sudoku grid\nconst getSudokuBoard = () => {\n  const grid = document.getElementById('sudokuGrid');\n  const inputs = grid.getElementsByTagName('input');\n  const board = [];\n  for (let i = 0; i < 9; i++) {\n    const row = [];\n    for (let j = 0; j < 9; j++) {\n      const value = inputs[i * 9 + j].value;\n      row.push(value ? parseInt(value, 10) : 0);\n    }\n    board.push(row);\n  }\n  return board;\n};\n\n// Function to display the result\nconst displayResult = (isValid) => {\n  const resultDiv = document.getElementById('result');\n  if (isValid) {\n    resultDiv.textContent = 'The Sudoku puzzle is valid!';\n    resultDiv.style.color = 'green';\n  } else {\n    resultDiv.textContent = 'The Sudoku puzzle is invalid!';\n    resultDiv.style.color = 'red';\n  }\n};\n\n// Event listener for the Validate button\ndocument.getElementById('validateButton').addEventListener('click', () => {\n  const board = getSudokuBoard();\n  const isValid = isValidSudoku(board);\n  displayResult(isValid);\n});\n\n// Create the Sudoku grid when the page loads\ncreateSudokuGrid();\n"],"names":["module","exports","isValidSudoku","board","isValid","nums","set","Set","num","has","add","i","col","j","push","gridStarts","row","grid","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","require","console","log","document","getElementById","addEventListener","getSudokuBoard","inputs","getElementsByTagName","value","parseInt","resultDiv","textContent","style","color","displayResult","createSudokuGrid","cell","createElement","className","input","type","min","max","appendChild"],"sourceRoot":""}